-- paths to metamodels for content assist
--@path Book=/HAL/model/hal.ecore
--@path Book=/seg.jUCMNav/src/seg/jUCMNav/emf/urn.ecore

module Hal2Urn;
create OUT : URN from IN : HAL;

rule hal2ucm {
	from 
		h : HAL!HAL
	to 
		u : URN!UCMspec (
		)
	do {
		thisModule.HAL <- h;
		u.scenarioGroups <- thisModule.NewScenariogroup(h);
		for (r in h.rooms) {
			for (d in r.devices) {
				u.resources <- thisModule.NewComponent(r, d);
			}
		}
	}
	
}

rule commands2responsibilities {
	from 
		t : HAL!Command
	to
		r : URN!Responsibility(expression <- t.name)
}

rule NewComponent(r: HAL!Room, d: HAL!Device) {
	to
		c: URN!Component(
			name <- r.name + '.' + d.name
			)
	do {
		c;
	}
}

rule NewScenariogroup(h: HAL!HAL) {
	to
		g: URN!ScenarioGroup
	do {
		for (r in h.rules) {
			g.scenarios <- thisModule.NewScenario(r);
		}
		g;
	}
}

rule NewScenario(r: HAL!AutomationRule) {
	to
		s: URN!ScenarioDef
	do {
		s.name <- r.name;
		s.startPoints <- thisModule.StartPoint();
		s.preconditions <- thisModule.Precondition2Conditions(r);
		s.endPoints <- thisModule.EndPoint();
		s;	
	}
}

rule Precondition2Conditions(p : HAL!AutomationRule) {
	to
		c : URN!Condition()
	do {
		for (r in thisModule.HAL.rooms) {
			for (s in r.devices) {
				if (p.precondition.sensor.name = s.name) {
					c.expression <- p.precondition.sensor.name + ' IN ' + r.name + ' ' + p.precondition.operator + ' ' + p.precondition.comparedAgainstValue;
				}
			}
			}
		c;
	}
}

rule StartPoint() {
	to
		e : URN!ScenarioStartPoint()
	do {
		e;	
	}
}

rule EndPoint() {
	to
		e : URN!ScenarioEndPoint()
	do {
		e;	
	}
}

